{
  "contractName": "Ticket",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_approve",
          "type": "address"
        }
      ],
      "name": "addApproval",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "approveId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approves",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_detail",
          "type": "string"
        }
      ],
      "name": "createEvent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "eventContractOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "eventId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "eventOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "eventOwnerBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "events",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "detail",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getApproveId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eventId",
          "type": "uint256"
        }
      ],
      "name": "getEvent",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEventContractOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEventId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eventId",
          "type": "uint256"
        }
      ],
      "name": "getEventOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_approve",
          "type": "address"
        }
      ],
      "name": "isApproval",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_approve",
          "type": "address"
        }
      ],
      "name": "removeApproval",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ticketContractOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ticketCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tickets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "ticketDetail",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "ticketId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_tickets",
          "type": "string[]"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        }
      ],
      "name": "multiTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approve\",\"type\":\"address\"}],\"name\":\"addApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"approveId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approves\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_detail\",\"type\":\"string\"}],\"name\":\"createEvent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eventContractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"eventId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eventOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"eventOwnerBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"events\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"detail\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getApproveId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"}],\"name\":\"getEvent\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEventContractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEventId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"}],\"name\":\"getEventOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approve\",\"type\":\"address\"}],\"name\":\"isApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_tickets\",\"type\":\"string[]\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"multiTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approve\",\"type\":\"address\"}],\"name\":\"removeApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ticketContractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ticketCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"ticketDetail\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"ticketId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/timcheng/personal/fyp/nft/src/contracts/Ticket.sol\":\"Ticket\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/timcheng/personal/fyp/nft/src/contracts/ERC721Full.sol\":{\"keccak256\":\"0x2c9428b26856816aabc93836bad491818b513ebb65e79dd96b78f994bbce3c6f\",\"urls\":[\"bzz-raw://df88a09cdb67f443c89908d0b1ec154f6e5a4b0b2177580d9d2eae8d0e3d9cf1\",\"dweb:/ipfs/QmWaaSeg35RuBMD2vDnTggkjfTZbgFzupQoCWHgSpC3T8U\"]},\"/Users/timcheng/personal/fyp/nft/src/contracts/Event.sol\":{\"keccak256\":\"0x4d054eb69773c7eabdf3e73fc1ec1bdc0fffae13b20616253353b1fe6086d1eb\",\"urls\":[\"bzz-raw://15c7af78d5d8670ab039b82ce862aba0d2ac05a059f733ef9384d1749fb0996b\",\"dweb:/ipfs/QmeqNyJTsfT1aWJUtFNGB7PW2NMQf9qtdkGBAvfrWovHCq\"]},\"/Users/timcheng/personal/fyp/nft/src/contracts/Ticket.sol\":{\"keccak256\":\"0x4e6c651079cbb77d709a4e6f3a50642beb9952081eb015ed91eeab5859b3c8fc\",\"urls\":[\"bzz-raw://f662002db686bf7f54c2500ab67b8fdb786542eac3c846054cfa157c312294f7\",\"dweb:/ipfs/QmT2YkscZTM3q8Da3y3aSXtSJq6KXVoRZbKVNNZXKjZYWC\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "110:1022:3:-;;;282:1:1;257:26;;314:1;287:28;;269:1:3;240:30;;313:92;8:9:-1;5:2;;;30:1;27;20:12;5:2;313:92:3;36885:155:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36962:4;36968:6;10817:40;10484:10;10836:20;;10817:18;;;:40;;:::i;:::-;13817;13691:10;13836:20;;13817:18;;;:40;;:::i;:::-;25848:51;25663:10;25867:31;;25848:18;;;:51;;:::i;:::-;34528:4;34520:5;:12;;;;;;;;;;;;:::i;:::-;;34552:6;34542:7;:16;;;;;;;;;;;;:::i;:::-;;34646:49;34382:10;34665:29;;34646:18;;;:49;;:::i;:::-;34448:254;;36885:155;;519:10:1;498:18;;:31;;;;;;;;;;;;;;;;;;390:10:3;368:19;;:32;;;;;;;;;;;;;;;;;;110:1022;;11541:190:0;11631:10;11616:25;;:11;:25;;;;;11608:66;;;;;;;;;;;;;;;;;;;;;;11720:4;11684:20;:33;11705:11;11684:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;11541:190;:::o;110:1022:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6:328:-1:-;;166:67;230:2;225:3;166:67;;;159:74;;266:30;262:1;257:3;253:11;246:51;325:2;320:3;316:12;309:19;;152:182;;;;342:407;;533:2;522:9;518:18;510:26;;583:9;577:4;573:20;569:1;558:9;554:17;547:47;608:131;734:4;608:131;;;600:139;;504:245;;;;757:163;;872:6;867:3;860:19;909:4;904:3;900:14;885:29;;853:67;;;;;110:1022:3;;;;;;;",
  "deployedSourceMap": "110:1022:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;110:1022:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11014:133:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;34807:83;;;:::i;:::-;;;;;;;;;;;;;;;;15834:200;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;257:26:1;;;:::i;:::-;;;;;;;;;;;;;;;;15138:411:0;;;;;;;;;;;;;;;;:::i;:::-;;129:36:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;26662:94:0;;;:::i;:::-;;;;;;;;;;;;;;;;287:28:1;;;:::i;:::-;;;;;;;;;;;;;;;;17474:285:0;;;;;;;;;;;;;;;;:::i;:::-;;26280:229;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1704:81:1;;;:::i;:::-;;;;;;;;;;;;;;;;1196:100;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;18392:132:0;;;;;;;;;;;;;;;;:::i;:::-;;1509:77:1;;;:::i;:::-;;;;;;;;;;;;;;;;27094:196:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;151:41:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;567:340;;;;;;;;;;;;;;;;:::i;:::-;;14494:223:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1789:219:1;;;;;;;;;;;;;;;;:::i;:::-;;1590:110;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14068:207:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;274:34:3;;;:::i;:::-;;;;;;;;;;;;;;;;1300:96:1;;;;;;;;;;;;;;;;:::i;:::-;;843:98;;;:::i;:::-;;;;;;;;;;;;;;;;34999:87:0;;;:::i;:::-;;;;;;;;;;;;;;;;16327:243;;;;;;;;;;;;;;;;:::i;:::-;;356:42:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;19229:265:0;;;;;;;;;;;;;;;;:::i;:::-;;319:33:1;;;:::i;:::-;;;;;;;;;;;;;;;;35286:202:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1075:117:1;;;;;;;;;;;;;;;;:::i;:::-;;240:30:3;;;:::i;:::-;;;;;;;;;;;;;;;;169:40:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;16892:145:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2012:220:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;913:216:3;;;;;;;;;;;;;;;;:::i;:::-;;1400:105:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;11014:133:0;11084:4;11107:20;:33;11128:11;11107:33;;;;;;;;;;;;;;;;;;;;;;;;;;;11100:40;;11014:133;;;:::o;34807:83::-;34846:13;34878:5;34871:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34807:83;:::o;15834:200::-;15893:7;15920:16;15928:7;15920;:16::i;:::-;15912:73;;;;;;;;;;;;;;;;;;;;;;16003:15;:24;16019:7;16003:24;;;;;;;;;;;;;;;;;;;;;15996:31;;15834:200;;;:::o;257:26:1:-;;;;:::o;15138:411:0:-;15201:13;15217:16;15225:7;15217;:16::i;:::-;15201:32;;15257:5;15251:11;;:2;:11;;;;15243:57;;;;;;;;;;;;;;;;;;;;;;15333:5;15319:19;;:10;:19;;;:58;;;;15342:35;15359:5;15366:10;15342:16;:35::i;:::-;15319:58;15311:148;;;;;;;;;;;;;;;;;;;;;;15497:2;15470:15;:24;15486:7;15470:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;15534:7;15530:2;15514:28;;15523:5;15514:28;;;;;;;;;;;;15138:411;;;:::o;129:36:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;26662:94:0:-;26706:7;26732:10;:17;;;;26725:24;;26662:94;:::o;287:28:1:-;;;;:::o;17474:285:0:-;17616:39;17635:10;17647:7;17616:18;:39::i;:::-;17608:101;;;;;;;;;;;;;;;;;;;;;;17720:32;17734:4;17740:2;17744:7;17720:13;:32::i;:::-;17474:285;;;:::o;26280:229::-;26360:7;26395:16;26405:5;26395:9;:16::i;:::-;26387:5;:24;26379:80;;;;;;;;;;;;;;;;;;;;;;26476:12;:19;26489:5;26476:19;;;;;;;;;;;;;;;26496:5;26476:26;;;;;;;;;;;;;;;;26469:33;;26280:229;;;;:::o;1704:81:1:-;1749:7;1771:9;;1764:16;;1704:81;:::o;1196:100::-;1254:4;1273:8;:18;1282:8;1273:18;;;;;;;;;;;;;;;;;;;;;;;;;1266:25;;1196:100;;;:::o;18392:132:0:-;18478:39;18495:4;18501:2;18505:7;18478:39;;;;;;;;;;;;:16;:39::i;:::-;18392:132;;;:::o;1509:77:1:-;1552:7;1574;;1567:14;;1509:77;:::o;27094:196:0:-;27152:7;27187:13;:11;:13::i;:::-;27179:5;:21;27171:78;;;;;;;;;;;;;;;;;;;;;;27266:10;27277:5;27266:17;;;;;;;;;;;;;;;;27259:24;;27094:196;;;:::o;151:41:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;567:340::-;624:10;637:1;624:14;;620:203;648:8;:15;640:5;:23;620:203;;;682:30;688:10;700:11;;682:5;:30::i;:::-;743:49;;;;;;;;760:1;750:7;;:11;743:49;;;;763:8;772:5;763:15;;;;;;;;;;;;;;743:49;;;;780:11;;743:49;;;720:7;:20;728:11;;720:20;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;800:16;:14;:16::i;:::-;665:7;;;;;;;620:203;;;;567:340;:::o;14494:223:0:-;14549:7;14568:13;14584:11;:20;14596:7;14584:20;;;;;;;;;;;;;;;;;;;;;14568:36;;14639:1;14622:19;;:5;:19;;;;14614:73;;;;;;;;;;;;;;;;;;;;;;14705:5;14698:12;;;14494:223;;;:::o;1789:219:1:-;1881:22;;;;;;;;1887:6;1881:22;;;;;;1895:7;1881:22;;;1863:6;:15;1870:7;;1863:15;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1931:6;1909:10;:19;1920:7;;1909:19;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;1943:37;:17;:25;1961:6;1943:25;;;;;;;;;;;;;;;:35;:37::i;:::-;1986:17;:15;:17::i;:::-;1789:219;;:::o;1590:110::-;1644:13;1672:6;:16;1679:8;1672:16;;;;;;;;;;;:23;;1665:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1590:110;;;:::o;14068:207:0:-;14123:7;14167:1;14150:19;;:5;:19;;;;14142:74;;;;;;;;;;;;;;;;;;;;;;14234:34;:17;:24;14252:5;14234:24;;;;;;;;;;;;;;;:32;:34::i;:::-;14227:41;;14068:207;;;:::o;274:34:3:-;;;;;;;;;;;;;:::o;1300:96:1:-;655:10;633:32;;:18;;;;;;;;;;;:32;;;625:66;;;;;;;;;;;;;;;;;;;;;;1386:5;1365:8;:18;1374:8;1365:18;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1300:96;:::o;843:98::-;896:7;918:18;;;;;;;;;;;911:25;;843:98;:::o;34999:87:0:-;35040:13;35072:7;35065:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34999:87;:::o;16327:243::-;16412:10;16406:16;;:2;:16;;;;16398:54;;;;;;;;;;;;;;;;;;;;;;16500:8;16463:18;:30;16482:10;16463:30;;;;;;;;;;;;;;;:34;16494:2;16463:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;16550:2;16523:40;;16538:10;16523:40;;;16554:8;16523:40;;;;;;;;;;;;;;;16327:243;;:::o;356:42:1:-;;;;;;;;;;;;;;;;;;;;;;:::o;19229:265:0:-;19335:31;19348:4;19354:2;19358:7;19335:12;:31::i;:::-;19384:48;19407:4;19413:2;19417:7;19426:5;19384:22;:48::i;:::-;19376:111;;;;;;;;;;;;;;;;;;;;;;19229:265;;;;:::o;319:33:1:-;;;;;;;;;;;;;:::o;35286:202:0:-;35344:13;35377:16;35385:7;35377;:16::i;:::-;35369:76;;;;;;;;;;;;;;;;;;;;;;35462:10;:19;35473:7;35462:19;;;;;;;;;;;35455:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35286:202;;;:::o;1075:117:1:-;655:10;633:32;;:18;;;;;;;;;;;:32;;;625:66;;;;;;;;;;;;;;;;;;;;;;1158:4;1137:8;:18;1146:8;1137:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;1168:19;:17;:19::i;:::-;1075:117;:::o;240:30:3:-;;;;:::o;169:40:1:-;;;;;;;;;;;;;;;;;;;;;;:::o;16892:145:0:-;16972:4;16995:18;:25;17014:5;16995:25;;;;;;;;;;;;;;;:35;17021:8;16995:35;;;;;;;;;;;;;;;;;;;;;;;;;16988:42;;16892:145;;;;:::o;2012:220:1:-;2078:7;2129:1;2099:32;;:18;;;;;;;;;;;:32;;;;2091:86;;;;;;;;;;;;;;;;;;;;;;2192:35;:17;:25;2210:6;2192:25;;;;;;;;;;;;;;;:33;:35::i;:::-;2185:42;;2012:220;;;:::o;913:216:3:-;1013:10;1026:1;1013:14;;1009:116;1037:9;:16;1029:5;:24;1009:116;;;1072:46;1089:5;1096:3;1101:9;1111:5;1101:16;;;;;;;;;;;;;;1072;:46::i;:::-;1055:7;;;;;;;1009:116;;;;913:216;;;:::o;1400:105:1:-;1458:7;1480:10;:20;1491:8;1480:20;;;;;;;;;;;;;;;;;;;;;1473:27;;1400:105;;;:::o;19689:152:0:-;19746:4;19762:13;19778:11;:20;19790:7;19778:20;;;;;;;;;;;;;;;;;;;;;19762:36;;19832:1;19815:19;;:5;:19;;;;19808:26;;;19689:152;;;:::o;20202:329::-;20287:4;20311:16;20319:7;20311;:16::i;:::-;20303:73;;;;;;;;;;;;;;;;;;;;;;20386:13;20402:16;20410:7;20402;:16::i;:::-;20386:32;;20447:5;20436:16;;:7;:16;;;:51;;;;20480:7;20456:31;;:20;20468:7;20456:11;:20::i;:::-;:31;;;20436:51;:87;;;;20491:32;20508:5;20515:7;20491:16;:32::i;:::-;20436:87;20428:96;;;20202:329;;;;:::o;27665:239::-;27750:38;27770:4;27776:2;27780:7;27750:19;:38::i;:::-;27799:47;27832:4;27838:7;27799:32;:47::i;:::-;27857:40;27885:2;27889:7;27857:27;:40::i;:::-;27665:239;;;:::o;28161:196::-;28224:24;28236:2;28240:7;28224:11;:24::i;:::-;28259:40;28287:2;28291:7;28259:27;:40::i;:::-;28310;28342:7;28310:31;:40::i;:::-;28161:196;;:::o;500:62:3:-;556:1;541:11;;:16;;;;;;;;;;;500:62::o;9857:89:0:-;9938:1;9920:7;:14;;;:19;;;;;;;;;;;9857:89;:::o;945:59:1:-;998:1;987:7;;:12;;;;;;;;;;;945:59::o;9739:112:0:-;9804:7;9830;:14;;;9823:21;;9739:112;;;:::o;23368:347::-;23489:4;23514:15;:2;:13;;;:15::i;:::-;23509:58;;23552:4;23545:11;;;;23509:58;23577:13;23609:2;23593:36;;;23630:10;23642:4;23648:7;23657:5;23593:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23593:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23593:70:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;23593:70:0;;;;;;;;;23577:86;;12310:10;23691:16;;23681:26;;;:6;:26;;;;23673:35;;;23368:347;;;;;;;:::o;1008:63:1:-;1065:1;1052:9;;:14;;;;;;;;;;;1008:63::o;22348:447:0:-;22461:4;22441:24;;:16;22449:7;22441;:16::i;:::-;:24;;;22433:78;;;;;;;;;;;;;;;;;;;;;;22543:1;22529:16;;:2;:16;;;;22521:65;;;;;;;;;;;;;;;;;;;;;;22597:23;22612:7;22597:14;:23::i;:::-;22631:35;:17;:23;22649:4;22631:23;;;;;;;;;;;;;;;:33;:35::i;:::-;22676:33;:17;:21;22694:2;22676:21;;;;;;;;;;;;;;;:31;:33::i;:::-;22743:2;22720:11;:20;22732:7;22720:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;22780:7;22776:2;22761:27;;22770:4;22761:27;;;;;;;;;;;;22348:447;;;:::o;30773:1128::-;31035:22;31060:32;31090:1;31060:12;:18;31073:4;31060:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;31035:57;;31102:18;31123:17;:26;31141:7;31123:26;;;;;;;;;;;;31102:47;;31267:14;31253:10;:28;31249:323;;31297:19;31319:12;:18;31332:4;31319:18;;;;;;;;;;;;;;;31338:14;31319:34;;;;;;;;;;;;;;;;31297:56;;31401:11;31368:12;:18;31381:4;31368:18;;;;;;;;;;;;;;;31387:10;31368:30;;;;;;;;;;;;;;;:44;;;;31517:10;31484:17;:30;31502:11;31484:30;;;;;;;;;;;:43;;;;31249:323;;31658:12;:18;31671:4;31658:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;30773:1128;;;;:::o;29619:183::-;29732:12;:16;29745:2;29732:16;;;;;;;;;;;;;;;:23;;;;29703:17;:26;29721:7;29703:26;;;;;;;;;;;:52;;;;29765:12;:16;29778:2;29765:16;;;;;;;;;;;;;;;29787:7;29765:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;29765:30:0;;;;;;;;;;;;;;;;;;;;;;29619:183;;:::o;20776:327::-;20861:1;20847:16;;:2;:16;;;;20839:61;;;;;;;;;;;;;;;;;;;;;;20919:16;20927:7;20919;:16::i;:::-;20918:17;20910:58;;;;;;;;;;;;;;;;;;;;;;21002:2;20979:11;:20;20991:7;20979:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;21014:33;:17;:21;21032:2;21014:21;;;;;;;;;;;;;;;:31;:33::i;:::-;21088:7;21084:2;21063:33;;21080:1;21063:33;;;;;;;;;;;;20776:327;;:::o;29997:161::-;30100:10;:17;;;;30073:15;:24;30089:7;30073:24;;;;;;;;;;;:44;;;;30127:10;30143:7;30127:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;30127:24:0;;;;;;;;;;;;;;;;;;;;;;29997:161;:::o;8236:413::-;8296:4;8499:12;8608:7;8596:20;8588:28;;8641:1;8634:4;:8;8627:15;;;8236:413;;;:::o;23877:171::-;23976:1;23940:38;;:15;:24;23956:7;23940:24;;;;;;;;;;;;;;;;;;;;;:38;;;23936:106;;24029:1;23994:15;:24;24010:7;23994:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;23936:106;23877:171;:::o;9952:108::-;10032:21;10051:1;10032:7;:14;;;:18;;:21;;;;:::i;:::-;10015:7;:14;;:38;;;;9952:108;:::o;5386:179::-;5444:7;5476:1;5471;:6;;5463:49;;;;;;;;;;;;;;;;;;;;;;5522:9;5538:1;5534;:5;5522:17;;5557:1;5550:8;;;5386:179;;;;:::o;110:1022:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;159:696;;282:3;275:4;267:6;263:17;259:27;249:2;;300:1;297;290:12;249:2;337:6;324:20;359:86;374:70;437:6;374:70;;;359:86;;;350:95;;462:5;487:6;480:5;473:21;517:4;509:6;505:17;495:27;;539:4;534:3;530:14;523:21;;592:6;625:1;610:239;635:6;632:1;629:13;610:239;;;718:3;705:17;697:6;693:30;742:43;781:3;769:10;742:43;;;737:3;730:56;809:4;804:3;800:14;793:21;;837:4;832:3;828:14;821:21;;667:182;657:1;654;650:9;645:14;;610:239;;;614:14;242:613;;;;;;;;881:707;;998:3;991:4;983:6;979:17;975:27;965:2;;1016:1;1013;1006:12;965:2;1053:6;1040:20;1075:80;1090:64;1147:6;1090:64;;;1075:80;;;1066:89;;1172:5;1197:6;1190:5;1183:21;1227:4;1219:6;1215:17;1205:27;;1249:4;1244:3;1240:14;1233:21;;1302:6;1349:3;1341:4;1333:6;1329:17;1324:3;1320:27;1317:36;1314:2;;;1366:1;1363;1356:12;1314:2;1391:1;1376:206;1401:6;1398:1;1395:13;1376:206;;;1459:3;1481:37;1514:3;1502:10;1481:37;;;1476:3;1469:50;1542:4;1537:3;1533:14;1526:21;;1570:4;1565:3;1561:14;1554:21;;1433:149;1423:1;1420;1416:9;1411:14;;1376:206;;;1380:14;958:630;;;;;;;;1596:124;;1673:6;1660:20;1651:29;;1685:30;1709:5;1685:30;;;1645:75;;;;;1727:128;;1806:6;1793:20;1784:29;;1818:32;1844:5;1818:32;;;1778:77;;;;;1862:132;;1945:6;1939:13;1930:22;;1957:32;1983:5;1957:32;;;1924:70;;;;;2002:440;;2103:3;2096:4;2088:6;2084:17;2080:27;2070:2;;2121:1;2118;2111:12;2070:2;2158:6;2145:20;2180:64;2195:48;2236:6;2195:48;;;2180:64;;;2171:73;;2264:6;2257:5;2250:21;2300:4;2292:6;2288:17;2333:4;2326:5;2322:16;2368:3;2359:6;2354:3;2350:16;2347:25;2344:2;;;2385:1;2382;2375:12;2344:2;2395:41;2429:6;2424:3;2419;2395:41;;;2063:379;;;;;;;;2451:434;;2549:3;2542:4;2534:6;2530:17;2526:27;2516:2;;2567:1;2564;2557:12;2516:2;2604:6;2591:20;2626:61;2641:45;2679:6;2641:45;;;2626:61;;;2617:70;;2707:6;2700:5;2693:21;2743:4;2735:6;2731:17;2776:4;2769:5;2765:16;2811:3;2802:6;2797:3;2793:16;2790:25;2787:2;;;2828:1;2825;2818:12;2787:2;2838:41;2872:6;2867:3;2862;2838:41;;;2509:376;;;;;;;;2894:442;;2996:3;2989:4;2981:6;2977:17;2973:27;2963:2;;3014:1;3011;3004:12;2963:2;3051:6;3038:20;3073:65;3088:49;3130:6;3088:49;;;3073:65;;;3064:74;;3158:6;3151:5;3144:21;3194:4;3186:6;3182:17;3227:4;3220:5;3216:16;3262:3;3253:6;3248:3;3244:16;3241:25;3238:2;;;3279:1;3276;3269:12;3238:2;3289:41;3323:6;3318:3;3313;3289:41;;;2956:380;;;;;;;;3344:130;;3424:6;3411:20;3402:29;;3436:33;3463:5;3436:33;;;3396:78;;;;;3481:241;;3585:2;3573:9;3564:7;3560:23;3556:32;3553:2;;;3601:1;3598;3591:12;3553:2;3636:1;3653:53;3698:7;3689:6;3678:9;3674:22;3653:53;;;3643:63;;3615:97;3547:175;;;;;3729:366;;;3850:2;3838:9;3829:7;3825:23;3821:32;3818:2;;;3866:1;3863;3856:12;3818:2;3901:1;3918:53;3963:7;3954:6;3943:9;3939:22;3918:53;;;3908:63;;3880:97;4008:2;4026:53;4071:7;4062:6;4051:9;4047:22;4026:53;;;4016:63;;3987:98;3812:283;;;;;;4102:627;;;;4265:2;4253:9;4244:7;4240:23;4236:32;4233:2;;;4281:1;4278;4271:12;4233:2;4316:1;4333:53;4378:7;4369:6;4358:9;4354:22;4333:53;;;4323:63;;4295:97;4423:2;4441:53;4486:7;4477:6;4466:9;4462:22;4441:53;;;4431:63;;4402:98;4559:2;4548:9;4544:18;4531:32;4583:18;4575:6;4572:30;4569:2;;;4615:1;4612;4605:12;4569:2;4635:78;4705:7;4696:6;4685:9;4681:22;4635:78;;;4625:88;;4510:209;4227:502;;;;;;4736:491;;;;4874:2;4862:9;4853:7;4849:23;4845:32;4842:2;;;4890:1;4887;4880:12;4842:2;4925:1;4942:53;4987:7;4978:6;4967:9;4963:22;4942:53;;;4932:63;;4904:97;5032:2;5050:53;5095:7;5086:6;5075:9;5071:22;5050:53;;;5040:63;;5011:98;5140:2;5158:53;5203:7;5194:6;5183:9;5179:22;5158:53;;;5148:63;;5119:98;4836:391;;;;;;5234:721;;;;;5398:3;5386:9;5377:7;5373:23;5369:33;5366:2;;;5415:1;5412;5405:12;5366:2;5450:1;5467:53;5512:7;5503:6;5492:9;5488:22;5467:53;;;5457:63;;5429:97;5557:2;5575:53;5620:7;5611:6;5600:9;5596:22;5575:53;;;5565:63;;5536:98;5665:2;5683:53;5728:7;5719:6;5708:9;5704:22;5683:53;;;5673:63;;5644:98;5801:2;5790:9;5786:18;5773:32;5825:18;5817:6;5814:30;5811:2;;;5857:1;5854;5847:12;5811:2;5877:62;5931:7;5922:6;5911:9;5907:22;5877:62;;;5867:72;;5752:193;5360:595;;;;;;;;5962:360;;;6080:2;6068:9;6059:7;6055:23;6051:32;6048:2;;;6096:1;6093;6086:12;6048:2;6131:1;6148:53;6193:7;6184:6;6173:9;6169:22;6148:53;;;6138:63;;6110:97;6238:2;6256:50;6298:7;6289:6;6278:9;6274:22;6256:50;;;6246:60;;6217:95;6042:280;;;;;;6329:472;;;6460:2;6448:9;6439:7;6435:23;6431:32;6428:2;;;6476:1;6473;6466:12;6428:2;6511:1;6528:53;6573:7;6564:6;6553:9;6549:22;6528:53;;;6518:63;;6490:97;6646:2;6635:9;6631:18;6618:32;6670:18;6662:6;6659:30;6656:2;;;6702:1;6699;6692:12;6656:2;6722:63;6777:7;6768:6;6757:9;6753:22;6722:63;;;6712:73;;6597:194;6422:379;;;;;;6808:366;;;6929:2;6917:9;6908:7;6904:23;6900:32;6897:2;;;6945:1;6942;6935:12;6897:2;6980:1;6997:53;7042:7;7033:6;7022:9;7018:22;6997:53;;;6987:63;;6959:97;7087:2;7105:53;7150:7;7141:6;7130:9;7126:22;7105:53;;;7095:63;;7066:98;6891:283;;;;;;7181:389;;7316:2;7304:9;7295:7;7291:23;7287:32;7284:2;;;7332:1;7329;7322:12;7284:2;7395:1;7384:9;7380:17;7367:31;7418:18;7410:6;7407:30;7404:2;;;7450:1;7447;7440:12;7404:2;7470:84;7546:7;7537:6;7526:9;7522:22;7470:84;;;7460:94;;7346:214;7278:292;;;;;7577:239;;7680:2;7668:9;7659:7;7655:23;7651:32;7648:2;;;7696:1;7693;7686:12;7648:2;7731:1;7748:52;7792:7;7783:6;7772:9;7768:22;7748:52;;;7738:62;;7710:96;7642:174;;;;;7823:261;;7937:2;7925:9;7916:7;7912:23;7908:32;7905:2;;;7953:1;7950;7943:12;7905:2;7988:1;8005:63;8060:7;8051:6;8040:9;8036:22;8005:63;;;7995:73;;7967:107;7899:185;;;;;8091:241;;8195:2;8183:9;8174:7;8170:23;8166:32;8163:2;;;8211:1;8208;8201:12;8163:2;8246:1;8263:53;8308:7;8299:6;8288:9;8284:22;8263:53;;;8253:63;;8225:97;8157:175;;;;;8339:142;8430:45;8469:5;8430:45;;;8425:3;8418:58;8412:69;;;8488:113;8571:24;8589:5;8571:24;;;8566:3;8559:37;8553:48;;;8608:104;8685:21;8700:5;8685:21;;;8680:3;8673:34;8667:45;;;8719:343;;8829:38;8861:5;8829:38;;;8879:70;8942:6;8937:3;8879:70;;;8872:77;;8954:52;8999:6;8994:3;8987:4;8980:5;8976:16;8954:52;;;9027:29;9049:6;9027:29;;;9022:3;9018:39;9011:46;;8809:253;;;;;;9069:347;;9181:39;9214:5;9181:39;;;9232:71;9296:6;9291:3;9232:71;;;9225:78;;9308:52;9353:6;9348:3;9341:4;9334:5;9330:16;9308:52;;;9381:29;9403:6;9381:29;;;9376:3;9372:39;9365:46;;9161:255;;;;;;9423:339;;9531:35;9560:5;9531:35;;;9578:71;9642:6;9637:3;9578:71;;;9571:78;;9654:52;9699:6;9694:3;9687:4;9680:5;9676:16;9654:52;;;9727:29;9749:6;9727:29;;;9722:3;9718:39;9711:46;;9511:251;;;;;;9770:380;;9930:67;9994:2;9989:3;9930:67;;;9923:74;;10030:34;10026:1;10021:3;10017:11;10010:55;10099:13;10094:2;10089:3;10085:12;10078:35;10141:2;10136:3;10132:12;10125:19;;9916:234;;;;10159:387;;10319:67;10383:2;10378:3;10319:67;;;10312:74;;10419:34;10415:1;10410:3;10406:11;10399:55;10488:20;10483:2;10478:3;10474:12;10467:42;10537:2;10532:3;10528:12;10521:19;;10305:241;;;;10555:328;;10715:67;10779:2;10774:3;10715:67;;;10708:74;;10815:30;10811:1;10806:3;10802:11;10795:51;10874:2;10869:3;10865:12;10858:19;;10701:182;;;;10892:373;;11052:67;11116:2;11111:3;11052:67;;;11045:74;;11152:34;11148:1;11143:3;11139:11;11132:55;11221:6;11216:2;11211:3;11207:12;11200:28;11256:2;11251:3;11247:12;11240:19;;11038:227;;;;11274:325;;11434:67;11498:2;11493:3;11434:67;;;11427:74;;11534:27;11530:1;11525:3;11521:11;11514:48;11590:2;11585:3;11581:12;11574:19;;11420:179;;;;11608:330;;11768:67;11832:2;11827:3;11768:67;;;11761:74;;11868:32;11864:1;11859:3;11855:11;11848:53;11929:2;11924:3;11920:12;11913:19;;11754:184;;;;11947:381;;12107:67;12171:2;12166:3;12107:67;;;12100:74;;12207:34;12203:1;12198:3;12194:11;12187:55;12276:14;12271:2;12266:3;12262:12;12255:36;12319:2;12314:3;12310:12;12303:19;;12093:235;;;;12337:321;;12497:67;12561:2;12556:3;12497:67;;;12490:74;;12597:23;12593:1;12588:3;12584:11;12577:44;12649:2;12644:3;12640:12;12633:19;;12483:175;;;;12667:393;;12827:67;12891:2;12886:3;12827:67;;;12820:74;;12927:34;12923:1;12918:3;12914:11;12907:55;12996:26;12991:2;12986:3;12982:12;12975:48;13051:2;13046:3;13042:12;13035:19;;12813:247;;;;13069:379;;13229:67;13293:2;13288:3;13229:67;;;13222:74;;13329:34;13325:1;13320:3;13316:11;13309:55;13398:12;13393:2;13388:3;13384:12;13377:34;13439:2;13434:3;13430:12;13423:19;;13215:233;;;;13457:378;;13617:67;13681:2;13676:3;13617:67;;;13610:74;;13717:34;13713:1;13708:3;13704:11;13697:55;13786:11;13781:2;13776:3;13772:12;13765:33;13826:2;13821:3;13817:12;13810:19;;13603:232;;;;13844:332;;14004:67;14068:2;14063:3;14004:67;;;13997:74;;14104:34;14100:1;14095:3;14091:11;14084:55;14167:2;14162:3;14158:12;14151:19;;13990:186;;;;14185:381;;14345:67;14409:2;14404:3;14345:67;;;14338:74;;14445:34;14441:1;14436:3;14432:11;14425:55;14514:14;14509:2;14504:3;14500:12;14493:36;14557:2;14552:3;14548:12;14541:19;;14331:235;;;;14575:378;;14735:67;14799:2;14794:3;14735:67;;;14728:74;;14835:34;14831:1;14826:3;14822:11;14815:55;14904:11;14899:2;14894:3;14890:12;14883:33;14944:2;14939:3;14935:12;14928:19;;14721:232;;;;14962:384;;15122:67;15186:2;15181:3;15122:67;;;15115:74;;15222:34;15218:1;15213:3;15209:11;15202:55;15291:17;15286:2;15281:3;15277:12;15270:39;15337:2;15332:3;15328:12;15321:19;;15108:238;;;;15355:370;;15515:67;15579:2;15574:3;15515:67;;;15508:74;;15615:34;15611:1;15606:3;15602:11;15595:55;15684:3;15679:2;15674:3;15670:12;15663:25;15716:2;15711:3;15707:12;15700:19;;15501:224;;;;15734:378;;15894:67;15958:2;15953:3;15894:67;;;15887:74;;15994:34;15990:1;15985:3;15981:11;15974:55;16063:11;16058:2;16053:3;16049:12;16042:33;16103:2;16098:3;16094:12;16087:19;;15880:232;;;;16121:386;;16281:67;16345:2;16340:3;16281:67;;;16274:74;;16381:34;16377:1;16372:3;16368:11;16361:55;16450:19;16445:2;16440:3;16436:12;16429:41;16498:2;16493:3;16489:12;16482:19;;16267:240;;;;16516:381;;16676:67;16740:2;16735:3;16676:67;;;16669:74;;16776:34;16772:1;16767:3;16763:11;16756:55;16845:14;16840:2;16835:3;16831:12;16824:36;16888:2;16883:3;16879:12;16872:19;;16662:235;;;;16905:113;16988:24;17006:5;16988:24;;;16983:3;16976:37;16970:48;;;17025:213;;17143:2;17132:9;17128:18;17120:26;;17157:71;17225:1;17214:9;17210:17;17201:6;17157:71;;;17114:124;;;;;17245:647;;17473:3;17462:9;17458:19;17450:27;;17488:79;17564:1;17553:9;17549:17;17540:6;17488:79;;;17578:72;17646:2;17635:9;17631:18;17622:6;17578:72;;;17661;17729:2;17718:9;17714:18;17705:6;17661:72;;;17781:9;17775:4;17771:20;17766:2;17755:9;17751:18;17744:48;17806:76;17877:4;17868:6;17806:76;;;17798:84;;17444:448;;;;;;;;17899:404;;18061:2;18050:9;18046:18;18038:26;;18075:71;18143:1;18132:9;18128:17;18119:6;18075:71;;;18194:9;18188:4;18184:20;18179:2;18168:9;18164:18;18157:48;18219:74;18288:4;18279:6;18219:74;;;18211:82;;18032:271;;;;;;18310:201;;18422:2;18411:9;18407:18;18399:26;;18436:65;18498:1;18487:9;18483:17;18474:6;18436:65;;;18393:118;;;;;18518:301;;18656:2;18645:9;18641:18;18633:26;;18706:9;18700:4;18696:20;18692:1;18681:9;18677:17;18670:47;18731:78;18804:4;18795:6;18731:78;;;18723:86;;18627:192;;;;;18826:407;;19017:2;19006:9;19002:18;18994:26;;19067:9;19061:4;19057:20;19053:1;19042:9;19038:17;19031:47;19092:131;19218:4;19092:131;;;19084:139;;18988:245;;;;19240:407;;19431:2;19420:9;19416:18;19408:26;;19481:9;19475:4;19471:20;19467:1;19456:9;19452:17;19445:47;19506:131;19632:4;19506:131;;;19498:139;;19402:245;;;;19654:407;;19845:2;19834:9;19830:18;19822:26;;19895:9;19889:4;19885:20;19881:1;19870:9;19866:17;19859:47;19920:131;20046:4;19920:131;;;19912:139;;19816:245;;;;20068:407;;20259:2;20248:9;20244:18;20236:26;;20309:9;20303:4;20299:20;20295:1;20284:9;20280:17;20273:47;20334:131;20460:4;20334:131;;;20326:139;;20230:245;;;;20482:407;;20673:2;20662:9;20658:18;20650:26;;20723:9;20717:4;20713:20;20709:1;20698:9;20694:17;20687:47;20748:131;20874:4;20748:131;;;20740:139;;20644:245;;;;20896:407;;21087:2;21076:9;21072:18;21064:26;;21137:9;21131:4;21127:20;21123:1;21112:9;21108:17;21101:47;21162:131;21288:4;21162:131;;;21154:139;;21058:245;;;;21310:407;;21501:2;21490:9;21486:18;21478:26;;21551:9;21545:4;21541:20;21537:1;21526:9;21522:17;21515:47;21576:131;21702:4;21576:131;;;21568:139;;21472:245;;;;21724:407;;21915:2;21904:9;21900:18;21892:26;;21965:9;21959:4;21955:20;21951:1;21940:9;21936:17;21929:47;21990:131;22116:4;21990:131;;;21982:139;;21886:245;;;;22138:407;;22329:2;22318:9;22314:18;22306:26;;22379:9;22373:4;22369:20;22365:1;22354:9;22350:17;22343:47;22404:131;22530:4;22404:131;;;22396:139;;22300:245;;;;22552:407;;22743:2;22732:9;22728:18;22720:26;;22793:9;22787:4;22783:20;22779:1;22768:9;22764:17;22757:47;22818:131;22944:4;22818:131;;;22810:139;;22714:245;;;;22966:407;;23157:2;23146:9;23142:18;23134:26;;23207:9;23201:4;23197:20;23193:1;23182:9;23178:17;23171:47;23232:131;23358:4;23232:131;;;23224:139;;23128:245;;;;23380:407;;23571:2;23560:9;23556:18;23548:26;;23621:9;23615:4;23611:20;23607:1;23596:9;23592:17;23585:47;23646:131;23772:4;23646:131;;;23638:139;;23542:245;;;;23794:407;;23985:2;23974:9;23970:18;23962:26;;24035:9;24029:4;24025:20;24021:1;24010:9;24006:17;23999:47;24060:131;24186:4;24060:131;;;24052:139;;23956:245;;;;24208:407;;24399:2;24388:9;24384:18;24376:26;;24449:9;24443:4;24439:20;24435:1;24424:9;24420:17;24413:47;24474:131;24600:4;24474:131;;;24466:139;;24370:245;;;;24622:407;;24813:2;24802:9;24798:18;24790:26;;24863:9;24857:4;24853:20;24849:1;24838:9;24834:17;24827:47;24888:131;25014:4;24888:131;;;24880:139;;24784:245;;;;25036:407;;25227:2;25216:9;25212:18;25204:26;;25277:9;25271:4;25267:20;25263:1;25252:9;25248:17;25241:47;25302:131;25428:4;25302:131;;;25294:139;;25198:245;;;;25450:407;;25641:2;25630:9;25626:18;25618:26;;25691:9;25685:4;25681:20;25677:1;25666:9;25662:17;25655:47;25716:131;25842:4;25716:131;;;25708:139;;25612:245;;;;25864:407;;26055:2;26044:9;26040:18;26032:26;;26105:9;26099:4;26095:20;26091:1;26080:9;26076:17;26069:47;26130:131;26256:4;26130:131;;;26122:139;;26026:245;;;;26278:407;;26469:2;26458:9;26454:18;26446:26;;26519:9;26513:4;26509:20;26505:1;26494:9;26490:17;26483:47;26544:131;26670:4;26544:131;;;26536:139;;26440:245;;;;26692:213;;26810:2;26799:9;26795:18;26787:26;;26824:71;26892:1;26881:9;26877:17;26868:6;26824:71;;;26781:124;;;;;26912:515;;27102:2;27091:9;27087:18;27079:26;;27116:71;27184:1;27173:9;27169:17;27160:6;27116:71;;;27235:9;27229:4;27225:20;27220:2;27209:9;27205:18;27198:48;27260:74;27329:4;27320:6;27260:74;;;27252:82;;27345:72;27413:2;27402:9;27398:18;27389:6;27345:72;;;27073:354;;;;;;;27434:256;;27496:2;27490:9;27480:19;;27534:4;27526:6;27522:17;27633:6;27621:10;27618:22;27597:18;27585:10;27582:34;27579:62;27576:2;;;27654:1;27651;27644:12;27576:2;27674:10;27670:2;27663:22;27474:216;;;;;27697:310;;27862:18;27854:6;27851:30;27848:2;;;27894:1;27891;27884:12;27848:2;27929:4;27921:6;27917:17;27909:25;;27992:4;27986;27982:15;27974:23;;27785:222;;;;28014:304;;28173:18;28165:6;28162:30;28159:2;;;28205:1;28202;28195:12;28159:2;28240:4;28232:6;28228:17;28220:25;;28303:4;28297;28293:15;28285:23;;28096:222;;;;28325:321;;28468:18;28460:6;28457:30;28454:2;;;28500:1;28497;28490:12;28454:2;28567:4;28563:9;28556:4;28548:6;28544:17;28540:33;28532:41;;28631:4;28625;28621:15;28613:23;;28391:255;;;;28653:318;;28793:18;28785:6;28782:30;28779:2;;;28825:1;28822;28815:12;28779:2;28892:4;28888:9;28881:4;28873:6;28869:17;28865:33;28857:41;;28956:4;28950;28946:15;28938:23;;28716:255;;;;28978:322;;29122:18;29114:6;29111:30;29108:2;;;29154:1;29151;29144:12;29108:2;29221:4;29217:9;29210:4;29202:6;29198:17;29194:33;29186:41;;29285:4;29279;29275:15;29267:23;;29045:255;;;;29307:121;;29400:5;29394:12;29384:22;;29365:63;;;;29435:118;;29525:5;29519:12;29509:22;;29490:63;;;;29560:122;;29654:5;29648:12;29638:22;;29619:63;;;;29690:162;;29804:6;29799:3;29792:19;29841:4;29836:3;29832:14;29817:29;;29785:67;;;;;29861:163;;29976:6;29971:3;29964:19;30013:4;30008:3;30004:14;29989:29;;29957:67;;;;;30032:91;;30094:24;30112:5;30094:24;;;30083:35;;30077:46;;;;30130:85;;30203:5;30196:13;30189:21;30178:32;;30172:43;;;;30222:144;;30294:66;30287:5;30283:78;30272:89;;30266:100;;;;30373:121;;30446:42;30439:5;30435:54;30424:65;;30418:76;;;;30501:72;;30563:5;30552:16;;30546:27;;;;30580:129;;30667:37;30698:5;30667:37;;;30654:50;;30648:61;;;;30716:121;;30795:37;30826:5;30795:37;;;30782:50;;30776:61;;;;30844:108;;30923:24;30941:5;30923:24;;;30910:37;;30904:48;;;;30960:145;31041:6;31036:3;31031;31018:30;31097:1;31088:6;31083:3;31079:16;31072:27;31011:94;;;;31114:268;31179:1;31186:101;31200:6;31197:1;31194:13;31186:101;;;31276:1;31271:3;31267:11;31261:18;31257:1;31252:3;31248:11;31241:39;31222:2;31219:1;31215:10;31210:15;;31186:101;;;31302:6;31299:1;31296:13;31293:2;;;31367:1;31358:6;31353:3;31349:16;31342:27;31293:2;31163:219;;;;;31390:97;;31478:2;31474:7;31469:2;31462:5;31458:14;31454:28;31444:38;;31438:49;;;;31495:117;31564:24;31582:5;31564:24;;;31557:5;31554:35;31544:2;;31603:1;31600;31593:12;31544:2;31538:74;;31619:111;31685:21;31700:5;31685:21;;;31678:5;31675:32;31665:2;;31721:1;31718;31711:12;31665:2;31659:71;;31737:115;31805:23;31822:5;31805:23;;;31798:5;31795:34;31785:2;;31843:1;31840;31833:12;31785:2;31779:73;;31859:117;31928:24;31946:5;31928:24;;;31921:5;31918:35;31908:2;;31967:1;31964;31957:12;31908:2;31902:74;",
  "source": "pragma solidity ^0.5.16;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC721Full.sol\";\nimport \"./Event.sol\";\n\ncontract Ticket is ERC721Full, Event {\n  mapping(uint256 => Ticket) public tickets;\n  // mapping(string => bool) _ticketExists;\n  uint256 public ticketCount = 0;\n  address public ticketContractOwner;\n\n  constructor() ERC721Full(\"Ticket\", \"TCK\") public {\n    ticketContractOwner = msg.sender;\n  }\n\n  struct Ticket {\n    uint256 eventId;\n    string ticketDetail;\n    uint256 ticketId;\n  }\n\n  function incrementCount() internal {\n    ticketCount += 1;\n  }\n\n\n  function mint(string[] memory _tickets) public {\n    for(uint index = 0; index < _tickets.length; index++) {\n      _mint(msg.sender, ticketCount);\n      tickets[ticketCount] = Ticket(eventId - 1, _tickets[index], ticketCount);\n      incrementCount();\n    }\n    // require(!_ticketExists[_ticket]);\n\n    // _ticketExists[_ticket] = true;\n  }\n  \n  function multiTransferFrom(address _from, address _to, uint256[] memory _tokenIds) public {\n    for(uint index = 0; index < _tokenIds.length; index++) {\n      safeTransferFrom(_from, _to, _tokenIds[index]);\n    }\n  }\n\n}\n",
  "sourcePath": "/Users/timcheng/personal/fyp/nft/src/contracts/Ticket.sol",
  "ast": {
    "absolutePath": "/Users/timcheng/personal/fyp/nft/src/contracts/Ticket.sol",
    "exportedSymbols": {
      "Ticket": [
        1871
      ]
    },
    "id": 1872,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1751,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "id": 1752,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:3"
      },
      {
        "absolutePath": "/Users/timcheng/personal/fyp/nft/src/contracts/ERC721Full.sol",
        "file": "./ERC721Full.sol",
        "id": 1753,
        "nodeType": "ImportDirective",
        "scope": 1872,
        "sourceUnit": 1455,
        "src": "60:26:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/timcheng/personal/fyp/nft/src/contracts/Event.sol",
        "file": "./Event.sol",
        "id": 1754,
        "nodeType": "ImportDirective",
        "scope": 1872,
        "sourceUnit": 1693,
        "src": "87:21:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1755,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1454,
              "src": "129:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1454",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 1756,
            "nodeType": "InheritanceSpecifier",
            "src": "129:10:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1757,
              "name": "Event",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1692,
              "src": "141:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Event_$1692",
                "typeString": "contract Event"
              }
            },
            "id": 1758,
            "nodeType": "InheritanceSpecifier",
            "src": "141:5:3"
          }
        ],
        "contractDependencies": [
          9,
          110,
          372,
          930,
          955,
          1288,
          1309,
          1434,
          1454,
          1692
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1871,
        "linearizedBaseContracts": [
          1871,
          1692,
          1454,
          1434,
          1309,
          1288,
          955,
          930,
          110,
          372,
          9
        ],
        "name": "Ticket",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1762,
            "name": "tickets",
            "nodeType": "VariableDeclaration",
            "scope": 1871,
            "src": "151:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ticket_$1787_storage_$",
              "typeString": "mapping(uint256 => struct Ticket.Ticket)"
            },
            "typeName": {
              "id": 1761,
              "keyType": {
                "id": 1759,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "159:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "151:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ticket_$1787_storage_$",
                "typeString": "mapping(uint256 => struct Ticket.Ticket)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1760,
                "name": "Ticket",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1787,
                "src": "170:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Ticket_$1787_storage_ptr",
                  "typeString": "struct Ticket.Ticket"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1765,
            "name": "ticketCount",
            "nodeType": "VariableDeclaration",
            "scope": 1871,
            "src": "240:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1763,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "240:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 1764,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "269:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1767,
            "name": "ticketContractOwner",
            "nodeType": "VariableDeclaration",
            "scope": 1871,
            "src": "274:34:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1766,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "274:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1779,
              "nodeType": "Block",
              "src": "362:43:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1774,
                      "name": "ticketContractOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1767,
                      "src": "368:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1775,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1886,
                        "src": "390:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "390:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "368:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1778,
                  "nodeType": "ExpressionStatement",
                  "src": "368:32:3"
                }
              ]
            },
            "documentation": null,
            "id": 1780,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "5469636b6574",
                    "id": 1770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "338:8:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_adc9ea83d7d69e1f89766083ed31732a556805d45b99c35409751054a912085a",
                      "typeString": "literal_string \"Ticket\""
                    },
                    "value": "Ticket"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "54434b",
                    "id": 1771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "348:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_46730e96dc9da771a1b0cdb835fff7b5a7db8c9fc27f5b07ffdbc1b27473d9ea",
                      "typeString": "literal_string \"TCK\""
                    },
                    "value": "TCK"
                  }
                ],
                "id": 1772,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1769,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1454,
                  "src": "327:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1454_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "327:27:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "324:2:3"
            },
            "returnParameters": {
              "id": 1773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "362:0:3"
            },
            "scope": 1871,
            "src": "313:92:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Ticket.Ticket",
            "id": 1787,
            "members": [
              {
                "constant": false,
                "id": 1782,
                "name": "eventId",
                "nodeType": "VariableDeclaration",
                "scope": 1787,
                "src": "429:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1781,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "429:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1784,
                "name": "ticketDetail",
                "nodeType": "VariableDeclaration",
                "scope": 1787,
                "src": "450:19:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1783,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "450:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1786,
                "name": "ticketId",
                "nodeType": "VariableDeclaration",
                "scope": 1787,
                "src": "475:16:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1785,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "475:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Ticket",
            "nodeType": "StructDefinition",
            "scope": 1871,
            "src": "409:87:3",
            "visibility": "public"
          },
          {
            "body": {
              "id": 1794,
              "nodeType": "Block",
              "src": "535:27:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1790,
                      "name": "ticketCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1765,
                      "src": "541:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "556:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "541:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1793,
                  "nodeType": "ExpressionStatement",
                  "src": "541:16:3"
                }
              ]
            },
            "documentation": null,
            "id": 1795,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "incrementCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "523:2:3"
            },
            "returnParameters": {
              "id": 1789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:0:3"
            },
            "scope": 1871,
            "src": "500:62:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1837,
              "nodeType": "Block",
              "src": "614:293:3",
              "statements": [
                {
                  "body": {
                    "id": 1835,
                    "nodeType": "Block",
                    "src": "674:149:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1813,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1886,
                                "src": "688:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "688:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1815,
                              "name": "ticketCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1765,
                              "src": "700:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1812,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1095
                            ],
                            "referencedDeclaration": 1095,
                            "src": "682:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "682:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1817,
                        "nodeType": "ExpressionStatement",
                        "src": "682:30:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1818,
                              "name": "tickets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1762,
                              "src": "720:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ticket_$1787_storage_$",
                                "typeString": "mapping(uint256 => struct Ticket.Ticket storage ref)"
                              }
                            },
                            "id": 1820,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1819,
                              "name": "ticketCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1765,
                              "src": "728:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "720:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ticket_$1787_storage",
                              "typeString": "struct Ticket.Ticket storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1822,
                                  "name": "eventId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1472,
                                  "src": "750:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 1823,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "760:1:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "750:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1825,
                                  "name": "_tickets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1798,
                                  "src": "763:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                                    "typeString": "string memory[] memory"
                                  }
                                },
                                "id": 1827,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1826,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1802,
                                  "src": "772:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "763:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1828,
                                "name": "ticketCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1765,
                                "src": "780:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1821,
                              "name": "Ticket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1787,
                              "src": "743:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Ticket_$1787_storage_ptr_$",
                                "typeString": "type(struct Ticket.Ticket storage pointer)"
                              }
                            },
                            "id": 1829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "743:49:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ticket_$1787_memory",
                              "typeString": "struct Ticket.Ticket memory"
                            }
                          },
                          "src": "720:72:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ticket_$1787_storage",
                            "typeString": "struct Ticket.Ticket storage ref"
                          }
                        },
                        "id": 1831,
                        "nodeType": "ExpressionStatement",
                        "src": "720:72:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1832,
                            "name": "incrementCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1795,
                            "src": "800:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "800:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1834,
                        "nodeType": "ExpressionStatement",
                        "src": "800:16:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1805,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1802,
                      "src": "640:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1806,
                        "name": "_tickets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1798,
                        "src": "648:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 1807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "648:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "640:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1836,
                  "initializationExpression": {
                    "assignments": [
                      1802
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1802,
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 1836,
                        "src": "624:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1801,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "624:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1804,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "637:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "624:14:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "665:7:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1809,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1802,
                        "src": "665:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1811,
                    "nodeType": "ExpressionStatement",
                    "src": "665:7:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "620:203:3"
                }
              ]
            },
            "documentation": null,
            "id": 1838,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1798,
                  "name": "_tickets",
                  "nodeType": "VariableDeclaration",
                  "scope": 1838,
                  "src": "581:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1796,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "581:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 1797,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "581:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "580:26:3"
            },
            "returnParameters": {
              "id": 1800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "614:0:3"
            },
            "scope": 1871,
            "src": "567:340:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1869,
              "nodeType": "Block",
              "src": "1003:126:3",
              "statements": [
                {
                  "body": {
                    "id": 1867,
                    "nodeType": "Block",
                    "src": "1064:61:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1860,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1840,
                              "src": "1089:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1861,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1842,
                              "src": "1096:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1862,
                                "name": "_tokenIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1845,
                                "src": "1101:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1864,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1863,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1849,
                                "src": "1111:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1101:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1859,
                            "name": "safeTransferFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              622,
                              650
                            ],
                            "referencedDeclaration": 622,
                            "src": "1072:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1072:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1866,
                        "nodeType": "ExpressionStatement",
                        "src": "1072:46:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1852,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1849,
                      "src": "1029:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1853,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1845,
                        "src": "1037:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 1854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1037:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1029:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1868,
                  "initializationExpression": {
                    "assignments": [
                      1849
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1849,
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 1868,
                        "src": "1013:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1848,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1013:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1851,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1026:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1013:14:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1055:7:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1856,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1849,
                        "src": "1055:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1858,
                    "nodeType": "ExpressionStatement",
                    "src": "1055:7:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "1009:116:3"
                }
              ]
            },
            "documentation": null,
            "id": 1870,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "multiTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1840,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1870,
                  "src": "940:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1842,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1870,
                  "src": "955:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1845,
                  "name": "_tokenIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 1870,
                  "src": "968:26:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1843,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "968:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1844,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "968:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "939:56:3"
            },
            "returnParameters": {
              "id": 1847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1003:0:3"
            },
            "scope": 1871,
            "src": "913:216:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1872,
        "src": "110:1022:3"
      }
    ],
    "src": "0:1133:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/timcheng/personal/fyp/nft/src/contracts/Ticket.sol",
    "exportedSymbols": {
      "Ticket": [
        1871
      ]
    },
    "id": 1872,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1751,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "id": 1752,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:3"
      },
      {
        "absolutePath": "/Users/timcheng/personal/fyp/nft/src/contracts/ERC721Full.sol",
        "file": "./ERC721Full.sol",
        "id": 1753,
        "nodeType": "ImportDirective",
        "scope": 1872,
        "sourceUnit": 1455,
        "src": "60:26:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/timcheng/personal/fyp/nft/src/contracts/Event.sol",
        "file": "./Event.sol",
        "id": 1754,
        "nodeType": "ImportDirective",
        "scope": 1872,
        "sourceUnit": 1693,
        "src": "87:21:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1755,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1454,
              "src": "129:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1454",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 1756,
            "nodeType": "InheritanceSpecifier",
            "src": "129:10:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1757,
              "name": "Event",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1692,
              "src": "141:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Event_$1692",
                "typeString": "contract Event"
              }
            },
            "id": 1758,
            "nodeType": "InheritanceSpecifier",
            "src": "141:5:3"
          }
        ],
        "contractDependencies": [
          9,
          110,
          372,
          930,
          955,
          1288,
          1309,
          1434,
          1454,
          1692
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1871,
        "linearizedBaseContracts": [
          1871,
          1692,
          1454,
          1434,
          1309,
          1288,
          955,
          930,
          110,
          372,
          9
        ],
        "name": "Ticket",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1762,
            "name": "tickets",
            "nodeType": "VariableDeclaration",
            "scope": 1871,
            "src": "151:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ticket_$1787_storage_$",
              "typeString": "mapping(uint256 => struct Ticket.Ticket)"
            },
            "typeName": {
              "id": 1761,
              "keyType": {
                "id": 1759,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "159:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "151:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ticket_$1787_storage_$",
                "typeString": "mapping(uint256 => struct Ticket.Ticket)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1760,
                "name": "Ticket",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1787,
                "src": "170:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Ticket_$1787_storage_ptr",
                  "typeString": "struct Ticket.Ticket"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1765,
            "name": "ticketCount",
            "nodeType": "VariableDeclaration",
            "scope": 1871,
            "src": "240:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1763,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "240:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 1764,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "269:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1767,
            "name": "ticketContractOwner",
            "nodeType": "VariableDeclaration",
            "scope": 1871,
            "src": "274:34:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1766,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "274:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1779,
              "nodeType": "Block",
              "src": "362:43:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1774,
                      "name": "ticketContractOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1767,
                      "src": "368:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1775,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1886,
                        "src": "390:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "390:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "368:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1778,
                  "nodeType": "ExpressionStatement",
                  "src": "368:32:3"
                }
              ]
            },
            "documentation": null,
            "id": 1780,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "5469636b6574",
                    "id": 1770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "338:8:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_adc9ea83d7d69e1f89766083ed31732a556805d45b99c35409751054a912085a",
                      "typeString": "literal_string \"Ticket\""
                    },
                    "value": "Ticket"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "54434b",
                    "id": 1771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "348:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_46730e96dc9da771a1b0cdb835fff7b5a7db8c9fc27f5b07ffdbc1b27473d9ea",
                      "typeString": "literal_string \"TCK\""
                    },
                    "value": "TCK"
                  }
                ],
                "id": 1772,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1769,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1454,
                  "src": "327:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1454_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "327:27:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "324:2:3"
            },
            "returnParameters": {
              "id": 1773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "362:0:3"
            },
            "scope": 1871,
            "src": "313:92:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Ticket.Ticket",
            "id": 1787,
            "members": [
              {
                "constant": false,
                "id": 1782,
                "name": "eventId",
                "nodeType": "VariableDeclaration",
                "scope": 1787,
                "src": "429:15:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1781,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "429:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1784,
                "name": "ticketDetail",
                "nodeType": "VariableDeclaration",
                "scope": 1787,
                "src": "450:19:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1783,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "450:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1786,
                "name": "ticketId",
                "nodeType": "VariableDeclaration",
                "scope": 1787,
                "src": "475:16:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1785,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "475:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Ticket",
            "nodeType": "StructDefinition",
            "scope": 1871,
            "src": "409:87:3",
            "visibility": "public"
          },
          {
            "body": {
              "id": 1794,
              "nodeType": "Block",
              "src": "535:27:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1790,
                      "name": "ticketCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1765,
                      "src": "541:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "556:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "541:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1793,
                  "nodeType": "ExpressionStatement",
                  "src": "541:16:3"
                }
              ]
            },
            "documentation": null,
            "id": 1795,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "incrementCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "523:2:3"
            },
            "returnParameters": {
              "id": 1789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:0:3"
            },
            "scope": 1871,
            "src": "500:62:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1837,
              "nodeType": "Block",
              "src": "614:293:3",
              "statements": [
                {
                  "body": {
                    "id": 1835,
                    "nodeType": "Block",
                    "src": "674:149:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1813,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1886,
                                "src": "688:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "688:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1815,
                              "name": "ticketCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1765,
                              "src": "700:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1812,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1095
                            ],
                            "referencedDeclaration": 1095,
                            "src": "682:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "682:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1817,
                        "nodeType": "ExpressionStatement",
                        "src": "682:30:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1818,
                              "name": "tickets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1762,
                              "src": "720:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Ticket_$1787_storage_$",
                                "typeString": "mapping(uint256 => struct Ticket.Ticket storage ref)"
                              }
                            },
                            "id": 1820,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1819,
                              "name": "ticketCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1765,
                              "src": "728:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "720:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ticket_$1787_storage",
                              "typeString": "struct Ticket.Ticket storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1822,
                                  "name": "eventId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1472,
                                  "src": "750:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 1823,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "760:1:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "750:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1825,
                                  "name": "_tickets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1798,
                                  "src": "763:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                                    "typeString": "string memory[] memory"
                                  }
                                },
                                "id": 1827,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1826,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1802,
                                  "src": "772:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "763:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1828,
                                "name": "ticketCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1765,
                                "src": "780:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1821,
                              "name": "Ticket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1787,
                              "src": "743:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Ticket_$1787_storage_ptr_$",
                                "typeString": "type(struct Ticket.Ticket storage pointer)"
                              }
                            },
                            "id": 1829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "743:49:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ticket_$1787_memory",
                              "typeString": "struct Ticket.Ticket memory"
                            }
                          },
                          "src": "720:72:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ticket_$1787_storage",
                            "typeString": "struct Ticket.Ticket storage ref"
                          }
                        },
                        "id": 1831,
                        "nodeType": "ExpressionStatement",
                        "src": "720:72:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1832,
                            "name": "incrementCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1795,
                            "src": "800:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "800:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1834,
                        "nodeType": "ExpressionStatement",
                        "src": "800:16:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1805,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1802,
                      "src": "640:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1806,
                        "name": "_tickets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1798,
                        "src": "648:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 1807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "648:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "640:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1836,
                  "initializationExpression": {
                    "assignments": [
                      1802
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1802,
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 1836,
                        "src": "624:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1801,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "624:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1804,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "637:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "624:14:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "665:7:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1809,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1802,
                        "src": "665:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1811,
                    "nodeType": "ExpressionStatement",
                    "src": "665:7:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "620:203:3"
                }
              ]
            },
            "documentation": null,
            "id": 1838,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1798,
                  "name": "_tickets",
                  "nodeType": "VariableDeclaration",
                  "scope": 1838,
                  "src": "581:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1796,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "581:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 1797,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "581:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "580:26:3"
            },
            "returnParameters": {
              "id": 1800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "614:0:3"
            },
            "scope": 1871,
            "src": "567:340:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1869,
              "nodeType": "Block",
              "src": "1003:126:3",
              "statements": [
                {
                  "body": {
                    "id": 1867,
                    "nodeType": "Block",
                    "src": "1064:61:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1860,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1840,
                              "src": "1089:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1861,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1842,
                              "src": "1096:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1862,
                                "name": "_tokenIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1845,
                                "src": "1101:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1864,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1863,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1849,
                                "src": "1111:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1101:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1859,
                            "name": "safeTransferFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              622,
                              650
                            ],
                            "referencedDeclaration": 622,
                            "src": "1072:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1072:46:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1866,
                        "nodeType": "ExpressionStatement",
                        "src": "1072:46:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1852,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1849,
                      "src": "1029:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1853,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1845,
                        "src": "1037:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 1854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1037:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1029:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1868,
                  "initializationExpression": {
                    "assignments": [
                      1849
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1849,
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 1868,
                        "src": "1013:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1848,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1013:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1851,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1026:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1013:14:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1055:7:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1856,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1849,
                        "src": "1055:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1858,
                    "nodeType": "ExpressionStatement",
                    "src": "1055:7:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "1009:116:3"
                }
              ]
            },
            "documentation": null,
            "id": 1870,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "multiTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1840,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1870,
                  "src": "940:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1842,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1870,
                  "src": "955:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1845,
                  "name": "_tokenIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 1870,
                  "src": "968:26:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1843,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "968:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1844,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "968:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "939:56:3"
            },
            "returnParameters": {
              "id": 1847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1003:0:3"
            },
            "scope": 1871,
            "src": "913:216:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1872,
        "src": "110:1022:3"
      }
    ],
    "src": "0:1133:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xc0c4fa3e0dD0f6589AE2472F07e903AEFDAE0F43",
      "transactionHash": "0x437b618ecd04e7b55c80739637702304e1f90c36b516327c9266c70095a061ce"
    },
    "1377": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xE43A676137932A97Ed44E1AB8A0b4f3B0AA9a45E",
      "transactionHash": "0x950d4de28e870d4e0ad44abf9346625673ed40fb1ae1f47824d411c78ecc7bab"
    },
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x7d15dea6b30EfDfcC58eD8e85CB992beFFC0d0dA",
      "transactionHash": "0xc8c8ff43673ee317e12fc8e80a0909350866b7cd74121275d87bd696a3e38979"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-02T14:39:27.308Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}